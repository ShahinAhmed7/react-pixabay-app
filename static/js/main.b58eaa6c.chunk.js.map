{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["imageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","ImageCard","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MA6BeA,EA3BG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACXC,EAAOD,EAAMC,KAAKC,MAAM,KAC9B,OACI,sBAAKC,UAAU,6CAAf,UACA,qBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,sBAAKA,UAAU,YAAf,UACA,sBAAKA,UAAU,yCAAf,uBACaH,EAAMO,QAEnB,+BACI,+BAAI,4CAAJ,IAA6BP,EAAMQ,SACnC,+BAAI,+CAAJ,IAAgCR,EAAMS,aACtC,+BAAI,4CAAJ,IAA6BT,EAAMU,eAGvC,qBAAKP,UAAU,YAAf,SAEKF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACN,uBAAkBV,UAAU,wGAA5B,cACES,IADSC,YCIZC,EAtBK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACdC,mBAAS,IADK,mBAC/BC,EAD+B,KACzBC,EADyB,KAQtC,OACE,qBAAKf,UAAU,iDAAf,SACE,sBAAMgB,SAPO,SAACC,GAChBA,EAAEC,iBACFN,EAAWE,IAKiBd,UAAU,kBAApC,SACE,sBAAKA,UAAU,6DAAf,UACI,uBAAOmB,SAAU,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QAAQrB,UAAU,kHAAkHsB,KAAK,OAAOC,YAAY,yBACnM,wBAAQvB,UAAU,kIAAkIsB,KAAK,SAAzJ,4BC2BGE,MApCf,WAAgB,IAAD,EAEeX,mBAAS,IAFxB,mBAENY,EAFM,KAEEC,EAFF,OAGqBb,oBAAS,GAH9B,mBAGNc,EAHM,KAGKC,EAHL,OAIWf,mBAAS,IAJpB,mBAINgB,EAJM,KAIAC,EAJA,KAkBb,OAXAC,qBAAU,WACRC,MAAM,gCAAD,OAAiCC,qCAAjC,cAA4EJ,EAA5E,kCACJK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QACzB,CAACX,IAIF,sBAAK7B,UAAU,8BAAf,UACE,cAAC,EAAD,CAAaY,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,OAGzCa,GAA+B,IAAlBF,EAAOkB,QAAgB,oBAAI3C,UAAU,qCAAd,6BACrC2B,EAAY,oBAAI3B,UAAU,qCAAd,wBAGX,qBAAKA,UAAU,uDAAf,SACCyB,EAAOjB,KAAI,SAAAX,GAAK,OACf,cAAC+C,EAAD,CAA0B/C,MAAOA,GAAjBA,EAAMgD,aC7BhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b58eaa6c.chunk.js","sourcesContent":["import React from 'react';\n\nconst imageCard = ({ image }) => {\n    const tags = image.tags.split(',');\n    return (\n        <div className=\"max-w-lg rounded overflow-hidden shadow-lg\">\n        <img src={image.webformatURL} alt=\"\" className=\"w-full\"/>\n        <div className=\"px-6 py-4\">\n        <div className=\"font-bold text-purple-500 text-xl mb-2\">\n          Photo by: {image.user}\n        </div>\n        <ul>\n            <li><strong>Views:</strong> {image.views}</li>\n            <li><strong>Download:</strong> {image.downloads}</li>\n            <li><strong>Likes:</strong> {image.likes}</li>\n          </ul>\n        </div>\n        <div className=\"px-6 py-4\">\n            \n            {tags.map((tag, index) => (\n                <span key={index} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 my-0 sm:my-1\">\n                #{tag}\n              </span>\n            ))}\n        </div>\n      </div>\n    )\n}\n\nexport default imageCard;\n","import React, { useState } from 'react';\n\nconst ImageSearch = ({ searchText }) => {\n  const [text, setText] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    searchText(text);\n  }\n\n  return (\n    <div className='max-w-sm rounded overflow-hidden my-10 mx-auto'>\n      <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\n        <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\n            <input onChange={e => setText(e.target.value)} className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type=\"text\" placeholder=\"Search Image Term...\" />\n            <button className=\"flex-shrink-0 bg-blue-500 hover:bg-blue-700 border-blue-500 hover:border-blue-700 text-sm border-4 text-white py-1 px-2 rounded\" type=\"submit\">\n                Search\n            </button>\n        </div>\n      </form>\n\t</div>\n  )\n}\n\nexport default ImageSearch;","import React, {useState, useEffect } from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\n\n\nfunction App() {\n\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('');\n\n\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\n    .then(res => res.json())\n    .then(data => {\n      setImages(data.hits);\n      setIsLoading(false);\n    })\n    .catch(err => console.log(err));\n  }, [term]);\n\n\n  return (\n    <div className=\"container mx-auto pl-5 pr-5\">\n      <ImageSearch searchText={(text) => setTerm(text)} />\n\n\n      {!isLoading && images.length === 0 && <h1 className=\"text-5xl text-center mx-auto mt-32\">No Images Found</h1> }\n      {isLoading ? <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1> : \n\n\n        <div className=\"grid lg:grid-cols-3 gap-4 grid-cols-1 sm:grid-cols-2\">\n        {images.map(image => (\n          <ImageCard key={image.id} image={image} />\n        ))}\n      </div>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}